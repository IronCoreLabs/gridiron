on:
  push:
    branches:
    - main
  pull_request:

name: Gridiron

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust_version:
        - stable
        - beta
        - 1.69.0 # MSRV
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust_version }}
    - uses: actions-rs/cargo@v1
      with:
        command: check

  build_linux:
    name: (Linux) Builds
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
        - aarch64-linux-android # Android x64
        - x86_64-unknown-linux-musl # Alpine Linux x86_64
        - wasm32-unknown-unknown
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        targets: ${{ matrix.target }}
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target=${{ matrix.target }}

  build_macos:
    name: (OS X) Builds
    runs-on: macos-12
    strategy:
      matrix:
        target:
        - aarch64-apple-ios
        - x86_64-apple-darwin # 64-bit OSX
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        targets: ${{ matrix.target }}
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target=${{ matrix.target }}

  build_win:
    name: (Windows) Builds
    runs-on: windows-2019
    strategy:
      matrix:
        target:
        - x86_64-pc-windows-msvc
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        targets: ${{ matrix.target }}
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target=${{ matrix.target }}

  test:
    name: Test Suite
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust_version:
        - stable
        - 1.69.0
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust_version }}
    - uses: actions-rs/cargo@v1
      with:
        command: test

  bench_build:
    name: Bench Compile
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust_version:
        - stable
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust_version }}
    - run: cargo bench --no-run

  fmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust_version:
        - nightly
    steps:
    - uses: actions/checkout@v3
    - uses: IronCoreLabs/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust_version }}
        components: rustfmt
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Cancel workflow
      if: failure()
      uses: andymckay/cancel-action@0.3
